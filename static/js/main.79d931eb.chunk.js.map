{"version":3,"sources":["components/Firebase.ts","components/FirebaseAuth.tsx","components/SignInForm.tsx","components/SignIn.tsx","components/SensorChart.tsx","components/Home.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","FirebaseAuth","props","useAuthState","user","loading","error","to","className","children","validationSchema","Yup","shape","email","required","password","SignInForm","useForm","resolver","yupResolver","register","handleSubmit","formState","isSubmitting","touchedFields","errors","Form","onSubmit","values","signInWithEmailAndPassword","then","res","onSignedIn","catch","alert","FormGroup","Label","for","Input","type","defaultValue","invalid","FormFeedback","message","Spinner","size","color","hidden","Button","disabled","withRouter","authLoading","authError","history","push","Container","uid","SensorChart","useState","dataCount","setDataCount","ref","child","orderByChild","limitToLast","useListVals","sensorData","data","labels","map","item","timestamp","datasets","label","yAxisID","light","fill","lineTension","temperatureCelsius","options","scales","xAxes","time","displayFormats","minute","yAxes","id","position","scaleLabel","display","labelString","ticks","suggestedMin","suggestedMax","onClick","Home","App","exact","path","component","SignIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79d931eb.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const auth = firebase.auth()\nexport const database = firebase.database()\n\nexport default firebase\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport firebase from './Firebase'\nimport { useAuthState } from 'react-firebase-hooks/auth'\n\ninterface FirebaseAuthProps {\n  children?: React.ReactNode\n}\n\nfunction FirebaseAuth (props: FirebaseAuthProps): JSX.Element {\n  const [user, loading, error] = useAuthState(firebase.auth())\n\n  if (loading) {\n    return (\n      <div>\n        Loading...\n      </div>\n    )\n  }\n\n  if (error != null) {\n    return <div>Error: {error}</div>\n  }\n\n  if (user == null) {\n    return <Redirect to='/signin' />\n  }\n\n  return <div className='FirebaseAuth'>{props.children}</div>\n}\n\nexport default FirebaseAuth\n","import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as Yup from 'yup'\n\nimport { Button, Form, FormGroup, Label, Input, FormFeedback, Spinner } from 'reactstrap'\n\nimport firebase from './Firebase'\n\n\ninterface SignInFormProps {\n  onSignedIn: VoidFunction\n}\n\nexport interface SignInFormValues {\n  email: string\n  password: string\n}\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().required()\n})\n\nfunction SignInForm(props: SignInFormProps) {\n  const { register, handleSubmit, formState: { isSubmitting, touchedFields, errors } } = useForm<SignInFormValues>({\n    resolver: yupResolver(validationSchema)\n  })\n\n  const onSubmit = (values: SignInFormValues): void => {\n    firebase.auth().signInWithEmailAndPassword(values.email, values.password)\n      .then(res => {\n        props.onSignedIn()\n      })\n      .catch(error => {\n        alert(error)\n      })\n  }\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <FormGroup className='my-2'>\n        <Label for='email'>Email</Label>\n        <Input\n          type='email'\n          defaultValue=''\n          invalid={!!(touchedFields.email != null && errors.email != null)}\n          {...register('email', { required: true })}\n        />\n        <FormFeedback>\n          {errors.email?.message ?? ''}\n        </FormFeedback>\n      </FormGroup>\n\n      <FormGroup className='my-2'>\n        <Label for='password'>Password</Label>\n        <Input\n          type='password'\n          defaultValue=''\n          invalid={!!(touchedFields.password != null && errors.password != null)}\n          {...register('password', { required: true })}\n        />\n        <FormFeedback>\n          {errors?.password?.message ?? ''}\n        </FormFeedback>\n      </FormGroup>\n\n      <Spinner size='sm' color='light' hidden={!isSubmitting} />\n\n      <Button className='my-2' color='primary' type='submit' disabled={isSubmitting}>\n        Login\n      </Button>\n\n    </Form>\n  )\n}\n\nexport default SignInForm\n","import React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router'\n\nimport { Container } from 'reactstrap'\n\nimport firebase from './Firebase'\nimport { useAuthState } from 'react-firebase-hooks/auth'\n\nimport SignInForm from './SignInForm'\n\n\nfunction SignIn (props: RouteComponentProps): JSX.Element {\n  const [user, authLoading, authError] = useAuthState(firebase.auth())\n\n  const onSignedIn = (): void => {\n  }\n\n  if (user != null) {\n    props.history.push('/')\n  }\n\n  return (\n    <div className='SignIn'>\n      <Container className='mt-4'>\n      <h3>Sign In</h3>\n        {authLoading ? (\n          <p>\n            Loading...\n          </p>\n        ) : authError != null ? (\n          <p>\n            Error: {authError}\n          </p>\n        ) : user != null ? (\n          <p>\n            (Redirecting) Signed In: {user.uid}\n          </p>\n        ) : (\n          <SignInForm\n            onSignedIn={onSignedIn}\n          />\n        )}\n      </Container>\n    </div>\n  )\n}\n\nexport default withRouter(SignIn)\n","import React, { useState } from 'react'\nimport firebase from './Firebase'\nimport { useListVals } from 'react-firebase-hooks/database'\n\nimport { Button } from 'reactstrap'\n\nimport { Line } from 'react-chartjs-2'\nimport { ChartOptions } from 'chart.js'\nimport 'chartjs-plugin-colorschemes'\n\ninterface SensorData {\n  light: number\n  temperature: number\n  temperatureCelsius: number\n  timestamp: number\n}\n\nfunction SensorChart (): JSX.Element {\n  const [dataCount, setDataCount] = useState(12)\n\n  const ref = firebase.database().ref('sensor')\n    .child('environment')\n    .orderByChild('timestamp')\n    .limitToLast(dataCount)\n  const [sensorData, loading, error] = useListVals<SensorData>(ref)\n\n  if (loading) {\n    return <div className='Loading'>Loading...</div>\n  }\n\n  if (error != null) {\n    return <div>Error: {error}</div>\n  }\n\n  if (sensorData == null) {\n    return <div>No data</div>\n  }\n\n  // TODO: improve these codes\n  const timestampList = sensorData.map(item => item.timestamp)\n  const lightList = sensorData.map(item => item.light)\n  const temperatureList = sensorData.map(item => item.temperatureCelsius)\n\n  const data: any = {\n    labels: timestampList,\n    datasets: [\n      {\n        label: '明るさ',\n        yAxisID: 'light',\n        data: lightList,\n        fill: true,\n        lineTension: false\n      },\n      {\n        label: '室温',\n        yAxisID: 'temperature',\n        data: temperatureList\n      }\n    ]\n  }\n  const options: ChartOptions = {\n    scales: {\n      xAxes: [{\n        type: 'time',\n        time: {\n          displayFormats: {\n            minute: 'HH:mm'\n          }\n        }\n      }],\n      yAxes: [{\n        id: 'light',\n        position: 'left',\n        scaleLabel: {\n          display: true,\n          labelString: '明るさ（電圧値≦1023）'\n        },\n        ticks: {\n          suggestedMin: 0,\n          suggestedMax: 1023\n        }\n      }, {\n        id: 'temperature',\n        position: 'right',\n        scaleLabel: {\n          display: true,\n          labelString: '室温（摂氏）'\n        },\n        ticks: {\n          suggestedMin: 10,\n          suggestedMax: 30\n        }\n      }]\n    }\n  }\n\n  return (\n    <div className='SensorChart'>\n      <div className='chart'>\n        <Line data={data} options={options} />\n      </div>\n      <div className='my-3 d-flex justify-content-center'>\n        <Button className='mx-2 btn-secondary' onClick={() => setDataCount(12)}>\n          3h\n        </Button>\n        <Button className='mx-2 btn-secondary' onClick={() => setDataCount(12*2)}>\n          6h\n        </Button>\n        <Button className='mx-2 btn-secondary' onClick={() => setDataCount(12*4)}>\n          12h\n        </Button>\n        <Button className='mx-2 btn-secondary' onClick={() => setDataCount(12*8)}>\n          24h\n        </Button>\n        <Button className='mx-2 btn-secondary' onClick={() => setDataCount(12*8*3)}>\n          3d\n        </Button>\n        <Button className='mx-2 btn-secondary' onClick={() => setDataCount(12*8*7)}>\n          7d\n        </Button>\n        <Button className='mx-2 btn-secondary' onClick={() => setDataCount(12*8*7*2)}>\n          2w\n        </Button>\n        <Button className='mx-2 btn-secondary' onClick={() => setDataCount(12*8*7*4)}>\n          4w\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default SensorChart\n","import React from 'react'\nimport SensorChart from './SensorChart'\n\nfunction Home (): JSX.Element {\n  return (\n    <div className='Home'>\n      <SensorChart />\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport FirebaseAuth from './FirebaseAuth'\nimport SignIn from './SignIn'\nimport Home from './Home'\nimport './App.css'\n\nfunction App (): JSX.Element {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/signin' component={SignIn} />\n\n        <FirebaseAuth>\n          <Switch>\n            <Route exact path='/' component={Home} />\n          </Switch>\n        </FirebaseAuth>\n\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if ((onPerfEntry != null) && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    }).catch(() => {})\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}
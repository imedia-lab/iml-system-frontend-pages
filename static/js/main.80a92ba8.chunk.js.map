{"version":3,"sources":["components/Firebase.ts","components/FirebaseAuth.tsx","components/SignIn.tsx","components/SensorChart.tsx","components/Home.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","FirebaseAuth","props","useAuthState","user","loading","error","active","spinner","text","to","className","children","SignInForm","Form","onSubmit","handleSubmit","FormGroup","Label","for","Input","type","name","id","value","values","email","onChange","handleChange","onBlur","handleBlur","invalid","touched","errors","FormFeedback","password","Button","color","disabled","Spinner","size","hidden","withRouter","history","push","uid","initialValues","signInWithEmailAndPassword","then","res","catch","alert","submitSignIn","validationSchema","Yup","shape","required","SensorChart","useState","dataCount","setDataCount","ref","child","orderByChild","limitToLast","useListVals","sensorData","data","labels","map","item","timestamp","datasets","label","yAxisID","light","fill","lineTension","temperatureCelsius","options","scales","xAxes","time","displayFormats","minute","yAxes","position","scaleLabel","display","labelString","ticks","suggestedMin","suggestedMax","onClick","Home","App","exact","path","component","SignIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80a92ba8.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/auth'\nimport 'firebase/database'\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const auth = firebase.auth()\nexport const database = firebase.database()\n\nexport default firebase\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport LoadingOverlay from 'react-loading-overlay'\nimport firebase from './Firebase'\nimport { useAuthState } from 'react-firebase-hooks/auth'\n\ninterface FirebaseAuthProps {\n  children?: React.ReactNode\n}\n\nfunction FirebaseAuth (props: FirebaseAuthProps): JSX.Element {\n  const [user, loading, error] = useAuthState(firebase.auth())\n\n  if (loading) {\n    return (\n      <LoadingOverlay\n        active\n        spinner\n        text='Loading...'\n      />\n    )\n  }\n\n  if (error != null) {\n    return <div>Error: {error}</div>\n  }\n\n  if (user == null) {\n    return <Redirect to='/signin' />\n  }\n\n  return <div className='FirebaseAuth'>{props.children}</div>\n}\n\nexport default FirebaseAuth\n","import React from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router'\nimport { Button, Form, FormGroup, Label, Input, FormFeedback, Spinner } from 'reactstrap'\nimport { Formik, FormikProps } from 'formik'\nimport * as Yup from 'yup'\nimport LoadingOverlay from 'react-loading-overlay'\n\nimport firebase from './Firebase'\nimport { useAuthState } from 'react-firebase-hooks/auth'\n\ninterface SignInValues {\n  email: string\n  password: string\n}\n\nfunction submitSignIn (values: SignInValues): void {\n  firebase.auth().signInWithEmailAndPassword(values.email, values.password)\n    .then(res => {\n    })\n    .catch(error => {\n      alert(error)\n    })\n}\n\nfunction SignInForm (props: FormikProps<SignInValues>): JSX.Element {\n  const [, loading] = useAuthState(firebase.auth())\n\n  return (\n    <Form onSubmit={props.handleSubmit}>\n      <FormGroup>\n        <Label for='email'>Email</Label>\n        <Input\n          type='email'\n          name='email'\n          id='email'\n          value={props.values.email ?? ''}\n          onChange={props.handleChange}\n          onBlur={props.handleBlur}\n          invalid={!!(props.touched.email != null && props.errors.email != null)}\n        />\n        <FormFeedback>\n          {props.errors.email ?? ''}\n        </FormFeedback>\n      </FormGroup>\n\n      <FormGroup>\n        <Label for='password'>Password</Label>\n        <Input\n          type='password'\n          name='password'\n          id='password'\n          value={props.values.password}\n          onChange={props.handleChange}\n          onBlur={props.handleBlur}\n          invalid={!!(props.touched.password != null && props.errors.password != null)}\n        />\n        <FormFeedback>\n          {props.errors.password}\n        </FormFeedback>\n      </FormGroup>\n\n      <Button color='primary' type='submit' disabled={loading}>\n        <Spinner size='sm' color='light' hidden={!loading} />\n        ログイン\n      </Button>\n\n    </Form>\n  )\n}\n\nfunction SignIn (props: RouteComponentProps): JSX.Element {\n  const [user, loading, error] = useAuthState(firebase.auth())\n\n  if (loading) {\n    return (\n      <LoadingOverlay\n        active\n        spinner\n        text='Loading...'\n      />\n    )\n  }\n\n  if (error != null) {\n    return (\n      <div>Error: {error}</div>\n    )\n  }\n\n  if (user != null) {\n    props.history.push('/')\n    return (\n      <div>Signed In: {user.uid}</div>\n    )\n  }\n\n  const initialValues: SignInValues = { email: '', password: '' }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={(values) => submitSignIn(values)}\n      validationSchema={\n        Yup.object().shape({\n          email: Yup.string().email().required(),\n          password: Yup.string().required()\n        })\n      }\n    >\n      {SignInForm}\n    </Formik>\n  )\n}\n\nexport default withRouter(SignIn)\n","import React, { useState } from 'react'\nimport firebase from './Firebase'\nimport { useListVals } from 'react-firebase-hooks/database'\n\nimport { Line } from 'react-chartjs-2'\nimport { ChartOptions } from 'chart.js'\nimport 'chartjs-plugin-colorschemes'\n\ninterface SensorData {\n  light: number\n  temperature: number\n  temperatureCelsius: number\n  timestamp: number\n}\n\nfunction SensorChart (): JSX.Element {\n  const [dataCount, setDataCount] = useState(12)\n\n  const ref = firebase.database().ref('sensor')\n    .child('environment')\n    .orderByChild('timestamp')\n    .limitToLast(dataCount)\n  const [sensorData, loading, error] = useListVals<SensorData>(ref)\n\n  if (loading) {\n    return <div className='Loading'>Loading...</div>\n  }\n\n  if (error != null) {\n    return <div>Error: {error}</div>\n  }\n\n  if (sensorData == null) {\n    return <div>No data</div>\n  }\n\n  // TODO: improve these codes\n  const timestampList = sensorData.map(item => item.timestamp)\n  const lightList = sensorData.map(item => item.light)\n  const temperatureList = sensorData.map(item => item.temperatureCelsius)\n\n  const data: any = {\n    labels: timestampList,\n    datasets: [\n      {\n        label: '明るさ',\n        yAxisID: 'light',\n        data: lightList,\n        fill: true,\n        lineTension: false\n      },\n      {\n        label: '室温',\n        yAxisID: 'temperature',\n        data: temperatureList\n      }\n    ]\n  }\n  const options: ChartOptions = {\n    scales: {\n      xAxes: [{\n        type: 'time',\n        time: {\n          displayFormats: {\n            minute: 'HH:mm'\n          }\n        }\n      }],\n      yAxes: [{\n        id: 'light',\n        position: 'left',\n        scaleLabel: {\n          display: true,\n          labelString: '明るさ（電圧値≦1023）'\n        },\n        ticks: {\n          suggestedMin: 0,\n          suggestedMax: 1023\n        }\n      }, {\n        id: 'temperature',\n        position: 'right',\n        scaleLabel: {\n          display: true,\n          labelString: '室温（摂氏）'\n        },\n        ticks: {\n          suggestedMin: 10,\n          suggestedMax: 30\n        }\n      }]\n    }\n  }\n\n  return (\n    <div className='SensorChart'>\n      <div className='chart'>\n        <Line data={data} options={options} />\n      </div>\n      <button onClick={() => setDataCount(12)}>60m</button>\n      <button onClick={() => setDataCount(12*2)}>120m</button>\n      <button onClick={() => setDataCount(12*12)}>12h</button>\n      <button onClick={() => setDataCount(12*24)}>24h</button>\n      <button onClick={() => setDataCount(12*24*3)}>3d</button>\n      <button onClick={() => setDataCount(12*24*7)}>7d</button>\n      <button onClick={() => setDataCount(12*24*7*2)}>2w</button>\n      <button onClick={() => setDataCount(12*24*7*4)}>4w</button>\n    </div>\n  )\n}\n\nexport default SensorChart\n","import React from 'react'\nimport SensorChart from './SensorChart'\n\nfunction Home (): JSX.Element {\n  return (\n    <div className='Home'>\n      <SensorChart />\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport FirebaseAuth from './FirebaseAuth'\nimport SignIn from './SignIn'\nimport Home from './Home'\nimport './App.css'\n\nfunction App (): JSX.Element {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/signin' component={SignIn} />\n\n        <FirebaseAuth>\n          <Switch>\n            <Route exact path='/' component={Home} />\n          </Switch>\n        </FirebaseAuth>\n\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if ((onPerfEntry != null) && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    }).catch(() => {})\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}